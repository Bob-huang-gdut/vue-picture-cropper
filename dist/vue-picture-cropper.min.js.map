{"version":3,"file":"vue-picture-cropper.min.js","sources":["../node_modules/cropperjs/dist/cropper.js","../node_modules/style-inject/dist/style-inject.es.js","../src/components/vue-picture-cropper.vue"],"sourcesContent":["/*!\n * Cropper.js v1.5.9\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2020-09-10T13:16:26.743Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\r\n  <div\r\n    class=\"vue--picture-cropper__wrap\"\r\n    :style=\"boxStyle\"\r\n  >\r\n    <img\r\n      class=\"vue--picture-cropper__img\"\r\n      :src=\"img\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {\r\n  defineComponent,\r\n  onMounted,\r\n  ref,\r\n  nextTick,\r\n  onBeforeUnmount,\r\n  watch\r\n} from 'vue'\r\nimport Cropper from 'cropperjs'\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\nexport const cropper = ref<any>(null);\r\n\r\n/** \r\n * 定义组件\r\n */\r\nconst VuePictureCropper = defineComponent({\r\n  name: 'VuePictureCropper',\r\n  props: {\r\n    boxStyle: {\r\n      type: Object,\r\n      required: false\r\n    },\r\n    img: String,\r\n    options: {\r\n      type: Object,\r\n      required: false,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  setup (props) {\r\n    const cropperImg = ref<any>(null);\r\n    setTimeout(() => {\r\n      console.log(props);\r\n      \r\n    }, 5000);\r\n\r\n    \r\n    /** \r\n     * 初始化插件\r\n     * 必须等待视图渲染完毕后再执行\r\n     */\r\n    const initCropper = (): void => {\r\n      nextTick( () => {\r\n        // 初始化实例\r\n        // cropper.value = new Cropper(cropperImg.value, props.options);\r\n        const IMG_DOM: any = document.querySelector('.vue--picture-cropper__img');\r\n        cropper.value = new Cropper(IMG_DOM, props.options);\r\n\r\n        // 暴露一个实例，用于在父级组件操作实例的方法\r\n        // VuePictureCropper.cropper = cropper.value;\r\n      });\r\n    };\r\n\r\n\r\n    /** \r\n     * 监听图片来源的变化\r\n     */\r\n    watch( () => props.img, () => {\r\n      console.log('watch props.img');\r\n      \r\n      // cropper.value.destroy();\r\n      // initCropper();\r\n    });\r\n\r\n\r\n    /** \r\n     * 执行初始化\r\n     */\r\n    // onMounted( () => {\r\n    //   initCropper();\r\n    // });\r\n    nextTick( () => {\r\n      initCropper();\r\n    });\r\n\r\n\r\n    /** \r\n     * 组件销毁前记得把插件也销毁\r\n     */\r\n    // onBeforeUnmount( () => {\r\n    //   cropper.value.destroy();\r\n    // });\r\n    \r\n\r\n    /** \r\n     * 定义模板并渲染\r\n     */\r\n    return {\r\n      // 数据\r\n      cropperImg,\r\n\r\n      // 方法\r\n      initCropper\r\n    }\r\n  }\r\n})\r\n\r\nexport default VuePictureCropper\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"names":["module","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","call","slice","name","test","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","maxRatio","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","ratio","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","this","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","read","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","factory","styleInject","css","ref","insertAt","head","firstChild","styleSheet","createTextNode","VuePictureCropper","defineComponent","boxStyle","required","default","setup","cropperImg","console","log","initCropper","nextTick","IMG_DOM","watch","_createBlock","class","_ctx","_createVNode"],"mappings":"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"}